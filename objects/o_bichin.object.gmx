<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>o_criatura</parentName>
  <maskName>d_coli0</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>s_ini_criaturas(id);
for (var i = 2; i &gt; -1; i--) {
    reloj_anima[i] = random(1);
    anima[i] = 0; // 0:aleteo, 1:levitaje
}
ensuelo = false;
origen = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// animaciones
s_anima(id, 0, 0.9, 1, 0); // aleteo
s_anima(id, 1, 2.1, 8, 0); // levitaje

// inteligencia artificial
if servidor {
    if s_errar(id, o_solido, false, true) {
        // eliminar al ser si no esta su lugar de habitat
        if origen != noone {
            if !instance_exists(origen) and random(1) &lt; 0.1 {
                instance_destroy();
                exit;
            }
        }
    }
    s_colision(id);
    if s_mover(id, mx, my, true) {
        reloj_errar = 0;
    }
    s_previene_escape(id, true, true);
}

// sincronizar con lo visual
s_sincroniza_xy(id);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ensuelo and x == mx and y == my {
    draw_sprite(d_volador, (especie - 27) * 4 + 3, xi, yi - zi);
}
else {
    if abs(anima[0]) &lt; 0.666 {
        draw_sprite(d_volador, (especie - 27) * 4, xi, yi - zi - anima[1]); }
    else if anima[0] &gt; 0 {
        draw_sprite(d_volador, (especie - 27) * 4 + 1, xi, yi - zi - anima[1]); }
    else {
        draw_sprite(d_volador, (especie - 27) * 4 + 2, xi, yi - zi - anima[1]); }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
