<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>o_terrestre</parentName>
  <maskName>d_coli1</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>s_ini_criaturas(id);
s_ini_humano(id);
for (var i = 6; i &gt; -1; i--) {
    reloj_anima[i] = random(1);
    anima[i] = 0; // 0:cuerpo, 1:cabeza, 2-4:manoi, 3-5:manod, 6:pies
}
alarm[0] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// verificar visual genero adecuado
if cabeza == 14 { genero = 0; }
else if cabeza == 15 { genero = 1; }

if torzo &gt;= 40 and torzo &lt;= 43 and genero == 1 {
    torzo += 4; }
else if torzo &gt;= 44 and torzo &lt;= 47 and genero == 0 {
    torzo -= 4; }

// verificar herramientas
if espalda &lt;= 10 {
    espalda = 0; }
switch si_herram_dispo(manoi) {
    case m_dispo_una: manod = manoi; break;
    case m_dispo_der: manoi = m_herram_nada; break;
}
switch si_herram_dispo(manod) {
    case m_dispo_una: manoi = manod; break;
    case m_dispo_izq: manod = m_herram_nada; break;
}
var esp = si_herram_espalda(manoi);
if esp != -1 { espalda = esp; }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// animaciones
s_anima(id, 0, 2.5, 4, 0); // cuerpo
s_anima(id, 1, 2.1, 3, 0); // cabeza
s_anima(id, 2, 1.6, 2, 0); // manoi x
s_anima(id, 3, 1.6, 2, 0); // manod x
s_anima(id, 4, 1.8, 6, 0); // manoi y
s_anima(id, 5, 1.8, 6, 0); // manod y
s_anima(id, 6, 0.6, 4, 4); // pies

// inteligencia artificial
if servidor {
    s_colision(id);
    if id == instance_find(o_humano, 0) {
        s_manual(id); }
    s_previene_escape(id, true, false);
}

// sincronizar con lo visual
s_sincroniza_xy(id);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var ccc = c_white;
if reloj_rojo != 0 {
    ccc = c_red; }

// espalda
draw_sprite_ext(d_espalda, espalda, xi, yi - zi - anima[0], 1, 1, 0, ccc, 1);
// pies
if point_distance(x, y, xi, yi) &gt; 4 {
    draw_sprite_ext(d_unidad, 3, xi - 9, yi - zi - anima[6], 1, 1, 0, ccc, 1);
    draw_sprite_ext(d_unidad, 3, xi + 12, yi - zi - 8 + anima[6], 1, 1, 0, ccc, 1);
    draw_sprite_ext(d_calzado, calzado, xi - 9, yi - zi - anima[6], 1, 1, 0, ccc, 1);
    draw_sprite_ext(d_calzado, calzado, xi + 12, yi - zi - 8 + anima[6], 1, 1, 0, ccc, 1);
}
else {
    draw_sprite_ext(d_unidad, 3, xi - 9, yi - zi, 1, 1, 0, ccc, 1);
    draw_sprite_ext(d_unidad, 3, xi + 12, yi - zi, 1, 1, 0, ccc, 1);
    draw_sprite_ext(d_calzado, calzado, xi - 9, yi - zi, 1, 1, 0, ccc, 1);
    draw_sprite_ext(d_calzado, calzado, xi + 12, yi - zi, 1, 1, 0, ccc, 1);
}
// cuerpo
draw_sprite_ext(d_unidad, 1 + genero, xi, yi - zi - anima[0], 1, 1, 0, ccc, 1);
draw_sprite_ext(d_pantalon, pantalon, xi, yi - zi - anima[0], 1, 1, 0, ccc, 1);
if pantalon == 0 or pantalon == 14 or pantalon == 15 { // genitales expuestos
    draw_sprite_ext(d_unidad, 6 + genero, xi, yi - zi - anima[0], 1, 1, 0, ccc, 1);
}
draw_sprite_ext(d_torzo, torzo, xi, yi - zi - anima[0], 1, 1, 0, ccc, 1);
// cabeza
draw_sprite_ext(d_unidad, 0, xi, yi - zi - anima[0] - anima[1], 1, 1, 0, ccc, 1);
draw_sprite_ext(d_cabeza, cabeza, xi, yi - zi - anima[0] - anima[1], 1, 1, 0, ccc, 1);
// manos
draw_sprite_ext(d_herramienta, manod * 2 + 1, xi + anima[3], yi - zi - anima[0] - anima[5], 1, 1, 0, ccc, 1);
draw_sprite_ext(d_herramienta, manoi * 2, xi - anima[2], yi - zi - anima[0] - anima[4], 1, 1, 0, ccc, 1);

// dibujar vida
draw_healthbar(xi - 12, yi - zi - 107, xi + 12, yi - zi - 103,
    (vida / si_para_masa(m_esp_humano)) * 100,
    c_dkgray, c_red, c_lime, 0, true, false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
