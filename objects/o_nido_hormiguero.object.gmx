<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>o_decorado</parentName>
  <maskName>d_coli2</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>s_ini_naturales(id);
reloj_orden = si_para_quieto(m_esp_hormiga) * random_range(5, 10);
var aux;
repeat irandom_range(2, si_para_poblacion(m_esp_hormiga)) {
    aux = s_crear_criatura(x, y, m_esp_hormiga);
    aux.origen = id;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if servidor {
    reloj_orden -= dt;
    if reloj_orden &lt;= 0 {
        reloj_orden = si_para_quieto(m_esp_hormiga) * random_range(5, 10);
        
        var miid = id;
        // traer a sus hormigas
        if random(1) &lt; 0.5 {
            with o_minusculo {
                if especie == m_esp_hormiga {
                    if origen == miid and random(1) &lt; 0.5 {
                        if s_verifica_linea(x, y, miid.x, miid.y, o_edificio, true) {
                            mx = miid.x;
                            my = miid.y;
                            reloj_errar = si_para_quieto(especie) * 6;
                        }
                    }
                }
            }
        }
        // llevar sus hormigas a otro nido
        else {
            // buscar otro hormiguero en contacto
            var lista = noone;
            var n = 0;
            with o_nido_hormiguero {
                if id != miid {
                    if point_distance(miid.x, miid.y, x, y) &lt; si_para_vision(m_esp_hormiga) * 4 {
                        if s_verifica_linea(miid.x, miid.y, x, y, o_edificio, true) {
                            lista[n] = id;
                            n++;
                        }
                    }
                }
            }
            if is_array(lista) {
                lista = lista[irandom(n - 1)];
                lista.reloj_orden = si_para_quieto(m_esp_hormiga) * random_range(5, 10);
                // decirle a sus hormigas que vayan alla
                with o_minusculo {
                    if especie == m_esp_hormiga {
                        if origen == miid and random(1) &lt; 0.5 {
                            if s_verifica_linea(x, y, lista.x, lista.y, o_edificio, true) {
                                mx = lista.x;
                                my = lista.y;
                                reloj_errar = si_para_quieto(especie) * 6;
                            }
                        }
                    }
                }
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(grafico, subgraf, x, y, 1, 1, 0, s_luz(x, y), 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
